Go node by node for both trees and then check each others values

1. Add edge case checks for checking if one is null and the other is not(False), or when both are null (True)
2. return the boolean of whether the values are the same at the nodes and then call it again on left nodes of the tree and the right



def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        
        if (not p and q) or (p and not q):
            return False
        if not p and not q:
            return True
        return p.val == q.val and self.isSameTree(p.left, q.left) and self.isSameTree(p.right, q.right)