Sliding Window technique and compute avg as we go by having a running_sum that changes dynamically


class Solution:
    def findMaxAverage(self, nums: List[int], k: int) -> float:
        
        left = 0
        curr_sum = sum(nums[0:k])
        max_avg = curr_sum/k
        for right in range(k, len(nums)):
            curr_sum += nums[right]
            curr_sum -= nums[left]
            left = left + 1
            max_avg = max(max_avg, float(curr_sum/k))
        return max_avg